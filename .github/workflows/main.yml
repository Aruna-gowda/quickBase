name: Quickbase Web Automation Testcases

# Enable manual trigger
on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ALLURE_VERSION: '2.20.1'
      GMAIL_TO: ${{ secrets.Gmail_To }}
      URL: ${{ secrets.APP_URL }}
      EMAIL: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PWD }}
      APPPASSWORD: ${{ secrets.APP_PWD }}
      HEADLESS: 'True'

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Create .env file for local variables
      - name: Create .env file
        run: |
          echo "URL=${{ env.URL }}" >> .env
          echo "EMAIL=${{ env.EMAIL }}" >> .env
          echo "PASSWORD=${{ env.PASSWORD }}" >> .env
          echo "APPPASSWORD=${{ env.APPPASSWORD }}" >> .env

      # Step 4: Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4b: Install Playwright browsers
      - name: Install Playwright Browsers
        run: |
          python -m playwright install

      # Step 5: Install Allure CLI
      - name: Install Allure CLI
        run: |
          curl -sOL https://github.com/allure-framework/allure2/releases/download/${{ env.ALLURE_VERSION }}/allure-${{ env.ALLURE_VERSION }}.tgz
          tar -zxf allure-${{ env.ALLURE_VERSION }}.tgz
          sudo mv allure-${{ env.ALLURE_VERSION }} /opt/allure
          sudo ln -sf /opt/allure/bin/allure /usr/local/bin/allure

      # Step 6: Run Playwright Tests
      - name: Run Playwright Tests
        run: |
          pytest

      # Step 7: Generate Allure Report
      - name: Generate Allure Report
        if: always()
        run: |
          allure generate allure-results -o allure-report --clean

      # Step 8: Verify Allure report folder exists
      - name: Check Allure Report Folder
        if: always()
        run: |
          if [ ! -d "allure-report" ]; then
            echo "Allure report folder does not exist!"
            ls -la
            exit 1
          fi

      # Step 9: Deploy Allure Report to GitHub Pages
      - name: Push Allure Report to gh-pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          user_name: github-actions
          user_email: github-actions@github.com
          allow_empty_commit: true

      # Step 10: Send Allure Report Link via Gmail
      - name: Send Allure Report Email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.APP_PWD }}
          subject: "Quickbase Automation Test Report"
          to: ${{ env.GMAIL_TO }}
          from: ${{ secrets.USERNAME }}
          html_body: |
            Hello,<br><br>
            The latest Quickbase web automation Allure report is available at:<br>
            <a href="https://Aruna-gowda.github.io/Aruna-gowda/quickBase/allure-report">View Allure Report</a><br><br>
            Regards,<br>
            Aruna
